
Вероятность перехода:
|---------------------------------------------------------------------------------------|
|											|
|	P - Вероятность того, что муравей перейдет из i в j;				|
|	W - желание муравья перейти из i в j;						|
|	S - сумма желаний перейти из i вершины ко всем доступным вершинам;		|
|	P = W/S;									|
|											|
|	S = сумма от 1 до m (t[i][j]^a * n[i][j]^b); 					|
|	W = t[i][j]^a * n[i][j]^b, 							|
|											|
|	a и b - константы , подбираемые опытным путем.					|
|	b - как сильно муравей ориентируется на расстояние при выборе следующей вершины.|
|	a - как сильно муравей ориентируется на феромоны при выборе следующей вершины.	|
|	t[i][j] - количество феромона между i и j городом. 				|
|	n[i][j] - величина, обратная расстоянию между i и j городом.			|
|---------------------------------------------------------------------------------------|



|-------------------------------------------------------------------------------------------------------------------------------|
|																|
|	Распределение феромона по граням(феромон распределяется, когда все муравьи проложат свой маршрут):			|
|																|
|																|
|	dT[i, j][k](t) - добавка феромона, которуб делает kй муравей между i и j на t итерации.					|
|																|
|	Q - константа.														|
|	L[k](t) - длина маршрута, пройденного муравьем k на текущей итерации t.							|
|																|
|																|
|			    Q / L[k](t), если дорога между i и j попала в маршрут муравья;					|
|	dT[ij][k](t) = 														|
|			    0, иначе.												|
|																|
|	T[i, j](t + 1) - количество феромонов между i и j городом на следующей итерации(t + 1);					|
|	T[i, j](t) - количество феромонов между i и j городом на старой итерации(t);						|
|	K = (1 - p) - Коэффициент испарения. Можно было бы записать в константу, сколько феромона остается после испарения.	|
|	S - сумма всех новых порций феромона, которые отложили все муравьи на этом участке. = сумма от k = 1 до m dT[ij][k](t)	|
|	T[i, j](t + 1) = K * T[i, j](t)	+ S;											|
|-------------------------------------------------------------------------------------------------------------------------------|

- Для начала разнесенем начальное количество феромонов по всем ребрам и начальное количество обратных расстоянию значений(типа 200 / 657, где 200 - константа , а расстояние = 657).	
- Для каждой вершины : рассчитать вероятность перехода к этой самой вершине.
- Пускаем муравья по маршруту 1 до n.




Итерация цикла:
	для каждой из N вершин:
		пока не прошли весь маршрут:
			посчитать для текущей вершины вероятности переходов для всех вершин;
			сделать переход с помощью ранд;
		заполнить  данные в таблицу маршрутов(сам маршрут --- его длина)
	обновить феромоны.


